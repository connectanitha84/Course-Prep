{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOBr2+aEFQEcw2o3wvx3e3m"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"8vJJpYwC2bJk","executionInfo":{"status":"ok","timestamp":1708405947850,"user_tz":-330,"elapsed":7,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}}},"outputs":[],"source":["import numpy as np"]},{"cell_type":"code","source":["arr = np.array([1,2,3,4,5])\n","print(arr)\n","print(arr.ndim)\n","print(arr.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rDsN14Ur3XSd","executionInfo":{"status":"ok","timestamp":1696326757889,"user_tz":-330,"elapsed":454,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"1fc722f9-fca9-43a0-ee4b-f85fbbe75896"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1 2 3 4 5]\n","1\n","(5,)\n"]}]},{"cell_type":"code","source":["arr = np.array(((1,2,3,4,5),(6,7,8,9,10),(11,12,13,14,15)))\n","print(arr)\n","print(arr.ndim)\n","print(arr.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GGJsA5U44MK7","executionInfo":{"status":"ok","timestamp":1696326802654,"user_tz":-330,"elapsed":431,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"d9caa532-d6fb-47f3-bb18-deda09699493"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[ 1  2  3  4  5]\n"," [ 6  7  8  9 10]\n"," [11 12 13 14 15]]\n","2\n","(3, 5)\n"]}]},{"cell_type":"code","source":["arr = np.array([[[1, 2, 3], [4, 5, 6]],\n","                [[1, 2, 3], [4, 5, 6]]])\n","print(arr.ndim)\n","print(arr)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jZl3QqJa6Bna","executionInfo":{"status":"ok","timestamp":1696326239448,"user_tz":-330,"elapsed":6,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"8db33db6-89f3-4167-8d67-7b0c1d423db7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["3\n","[[[1 2 3]\n","  [4 5 6]]\n","\n"," [[1 2 3]\n","  [4 5 6]]]\n"]}]},{"cell_type":"code","source":["arr = np.array([1, 2, 3, 4], ndmin=5)#create an array of dimensionality 5\n","print(arr)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Vjkd28oC6Qgo","executionInfo":{"status":"ok","timestamp":1696326536997,"user_tz":-330,"elapsed":5,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"6183e36f-ef41-416b-a20e-49d0d7ba1f70"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[[[[1 2 3 4]]]]]\n"]}]},{"cell_type":"code","source":["arr = np.array([1, 2, 3, 4])\n","print(arr[2] + arr[3])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yTChq5p787mb","executionInfo":{"status":"ok","timestamp":1696326946536,"user_tz":-330,"elapsed":667,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"591e38d3-6524-4d74-e8af-f6d501f046e1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["7\n"]}]},{"cell_type":"code","source":["arr = np.array([[1,2,3,4,5], [6,7,8,9,10]])\n","arr[0,3]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"28VcHAJR9rri","executionInfo":{"status":"ok","timestamp":1696327500356,"user_tz":-330,"elapsed":7,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"ac89bd8a-2daa-4c6b-dc92-4cb925e832e2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["4"]},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["arr = np.array([1, 2, 3, 4, 5, 6, 7]) #slicing\n","print(arr[1:5])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"A4yHBIU79-VB","executionInfo":{"status":"ok","timestamp":1696327570404,"user_tz":-330,"elapsed":423,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"961837d2-2f1c-4b7e-9140-bf35c603034a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[2 3 4 5]\n"]}]},{"cell_type":"code","source":["print(arr[:4]) #till the index 4"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_Cm0TS4fAfCB","executionInfo":{"status":"ok","timestamp":1696327676789,"user_tz":-330,"elapsed":5,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"684ee331-b2b5-4c3d-82c4-9c4ada2b032f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1 2 3 4]\n"]}]},{"cell_type":"code","source":["print(arr[4:])# from the index 4"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"t5l01tA9AltB","executionInfo":{"status":"ok","timestamp":1696327699444,"user_tz":-330,"elapsed":678,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"c8227e8a-ae5e-4ccd-baa7-f9ef9861a063"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[5 6 7]\n"]}]},{"cell_type":"code","source":["print(arr[1:5:2]) #till index 5 step 2\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xMQHwEiOAtMo","executionInfo":{"status":"ok","timestamp":1696327724012,"user_tz":-330,"elapsed":566,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"eab58cbe-6e9f-4d56-dec6-5dfa5417d6b1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[2 4]\n"]}]},{"cell_type":"code","source":["arr = np.array([[1, 2, 3, 4, 5], [6, 7, 8, 9, 10]])\n","print(arr[1, 1:4])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"USzJFk83A-LC","executionInfo":{"status":"ok","timestamp":1696327829439,"user_tz":-330,"elapsed":739,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"3223a67e-13aa-4d3e-87b1-1888df2fe379"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[7 8 9]\n"]}]},{"cell_type":"code","source":["print(arr[0:2 , 2:4])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZM0ot6UeBXJJ","executionInfo":{"status":"ok","timestamp":1696328833628,"user_tz":-330,"elapsed":4,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"0ff6ebfe-5ef8-4232-a002-f5f1ef5ac94c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[3 4]\n"," [8 9]]\n"]}]},{"cell_type":"markdown","source":["Numpy Data types\n"],"metadata":{"id":"xgt8qoyHFWaH"}},{"cell_type":"code","source":["arr = np.array(['apple', 'banana', 'cherry'])\n","print(arr.dtype)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ChSqAZaFFZ1K","executionInfo":{"status":"ok","timestamp":1696328982819,"user_tz":-330,"elapsed":426,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"adcb3e15-cc72-41d6-cbb5-3c43ef529406"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<U6\n"]}]},{"cell_type":"code","source":["arr = np.array([1, 2, 3, 4])\n","\n","print(arr.dtype)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mZiGVzpoFrR6","executionInfo":{"status":"ok","timestamp":1696329025095,"user_tz":-330,"elapsed":14,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"b8da8855-25b5-4a72-c53d-b5603ecea7e8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["int64\n"]}]},{"cell_type":"markdown","source":["Array Iteration"],"metadata":{"id":"oduU-pOqTujU"}},{"cell_type":"code","source":["arr = np.array([1, 2, 3])\n","\n","for x in arr:\n","  print(x)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MZ9hTvv9Txdt","executionInfo":{"status":"ok","timestamp":1696332719612,"user_tz":-330,"elapsed":506,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"f791d155-68c8-446d-97ce-e25867917fbb"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1\n","2\n","3\n"]}]},{"cell_type":"code","source":["arr = np.array([[1, 2, 3], [4, 5, 6]])\n","\n","for x in arr:\n","  for y in x:\n","    print(y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"P0B2CV0_T0Xf","executionInfo":{"status":"ok","timestamp":1696332732813,"user_tz":-330,"elapsed":8,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"25176878-9c89-4409-94f6-424f8045c290"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1\n","2\n","3\n","4\n","5\n","6\n"]}]},{"cell_type":"code","source":["arr = np.array([[[1, 2, 3], [4, 5, 6]], [[7, 8, 9], [10, 11, 12]]])\n","\n","for x in arr:\n","  for y in x:\n","    for z in y:\n","      print(z)"],"metadata":{"id":"xboS2IcnT2h0","executionInfo":{"status":"ok","timestamp":1696332748690,"user_tz":-330,"elapsed":525,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"9d735c79-5cb9-4180-e363-fff545911927","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1\n","2\n","3\n","4\n","5\n","6\n","7\n","8\n","9\n","10\n","11\n","12\n"]}]},{"cell_type":"markdown","source":["Joining Arrays"],"metadata":{"id":"k5FiUhgVT58a"}},{"cell_type":"code","source":["arr1 = np.array([1, 2, 3])\n","\n","arr2 = np.array([4, 5, 6])\n","\n","arr = np.concatenate((arr1, arr2))\n","\n","print(arr)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pUanxnBwTVtO","executionInfo":{"status":"ok","timestamp":1708405948950,"user_tz":-330,"elapsed":4,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"ae8ccad0-4860-4bc2-b94d-6bf424025431"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["[1 2 3 4 5 6]\n"]}]},{"cell_type":"code","source":["arr1 = np.array([[1, 2], [3, 4]])\n","\n","arr2 = np.array([[5, 6], [7, 8]])\n","\n","arr = np.concatenate((arr1, arr2), axis=1)\n","\n","print(arr)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_o_Yhm5yTaJP","executionInfo":{"status":"ok","timestamp":1696332624202,"user_tz":-330,"elapsed":5,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"997cab6c-c161-4336-e65a-096954adc7d0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[1 2 5 6]\n"," [3 4 7 8]]\n"]}]},{"cell_type":"code","source":["arr1 = np.array([1, 2, 3])\n","\n","arr2 = np.array([4, 5, 6])\n","\n","arr = np.stack((arr1, arr2), axis=1)\n","\n","print(arr)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QQZw8etVTfYV","executionInfo":{"status":"ok","timestamp":1696332644997,"user_tz":-330,"elapsed":5,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"ef58aedb-b560-486b-cf28-8a44df73c662"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[1 4]\n"," [2 5]\n"," [3 6]]\n"]}]},{"cell_type":"code","source":["arr = np.hstack((arr1, arr2))\n","\n","print(arr)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Um9PybZkTkSl","executionInfo":{"status":"ok","timestamp":1696332671786,"user_tz":-330,"elapsed":9,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"4fc267de-c9cd-41de-d465-63785a725caf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1 2 3 4 5 6]\n"]}]},{"cell_type":"code","source":["arr = np.vstack((arr1, arr2))\n","\n","print(arr)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dwnzX2NBTpjQ","executionInfo":{"status":"ok","timestamp":1696332686943,"user_tz":-330,"elapsed":5,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"b2c16a03-44bb-46c0-fbfa-835c7f722f83"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[1 2 3]\n"," [4 5 6]]\n"]}]},{"cell_type":"code","source":["arr = np.array([3, 2, 0, 1])\n","\n","print(np.sort(arr))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BbDbZ4kVTN_R","executionInfo":{"status":"ok","timestamp":1696332586105,"user_tz":-330,"elapsed":6,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"9f36b588-5d93-4bfd-b9c0-69131ffc8019"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0 1 2 3]\n"]}]},{"cell_type":"code","source":["arr = np.array(['banana', 'cherry', 'apple'])\n","\n","print(np.sort(arr))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eNOtfdMiTQ6W","executionInfo":{"status":"ok","timestamp":1696332589882,"user_tz":-330,"elapsed":5,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"24a89542-47df-405d-c046-d18c45295a84"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['apple' 'banana' 'cherry']\n"]}]},{"cell_type":"code","source":["np.random.rand()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jHGieJ_oRavR","executionInfo":{"status":"ok","timestamp":1696332137376,"user_tz":-330,"elapsed":4,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"a6d4164a-528c-4dcc-b2e8-3887d15d10b3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.8097716261146415"]},"metadata":{},"execution_count":87}]},{"cell_type":"code","source":["np.random.rand(4,2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"etbn1omMSkON","executionInfo":{"status":"ok","timestamp":1696332407692,"user_tz":-330,"elapsed":4,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"4e7bbce7-4412-4dab-c2a0-bacfaafef1d7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.45816488, 0.16084476],\n","       [0.10814401, 0.10507185],\n","       [0.25141421, 0.16795803],\n","       [0.14042134, 0.17747945]])"]},"metadata":{},"execution_count":98}]},{"cell_type":"code","source":[],"metadata":{"id":"YegiUNiJup_U"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["np.random.randint(100)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dXnEHNVIRnX0","executionInfo":{"status":"ok","timestamp":1696332430432,"user_tz":-330,"elapsed":6,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"f2bc7da0-4c2e-4981-b87a-bc6e0b4f9197"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["37"]},"metadata":{},"execution_count":100}]},{"cell_type":"code","source":["np.random.randint(4,15,size=(3,3))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ihnFWvyORzyD","executionInfo":{"status":"ok","timestamp":1696332233741,"user_tz":-330,"elapsed":10,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"11003fbb-a8d5-4302-de7d-f7b50980a9fb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 9, 11,  4],\n","       [ 5, 11,  7],\n","       [10,  4, 13]])"]},"metadata":{},"execution_count":95}]},{"cell_type":"markdown","source":["The numpy.zeros() function is one of the most significant functions which is used in machine learning programs widely. This function is used to generate an array containing zeros.\n","\n","The numpy.zeros() function provide a new array of given shape and type, which is filled with zeros.\n","\n","numpy.zeros(shape,dtype,)"],"metadata":{"id":"njc5g9BJZdAJ"}},{"cell_type":"code","source":["np.zeros((2,3))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JC2VGjboSN3u","executionInfo":{"status":"ok","timestamp":1696332315861,"user_tz":-330,"elapsed":547,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"a16b9c77-72b1-4c64-905b-368da24eec0c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0., 0., 0.],\n","       [0., 0., 0.]])"]},"metadata":{},"execution_count":96}]},{"cell_type":"code","source":["np.ones((2,3))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3DGcJARJSXps","executionInfo":{"status":"ok","timestamp":1696332354656,"user_tz":-330,"elapsed":11,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"7f6020bf-1faf-4b1e-e47a-4269b1231fbe"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1., 1., 1.],\n","       [1., 1., 1.]])"]},"metadata":{},"execution_count":97}]},{"cell_type":"code","source":["np.full((2,2),99)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VHh7UhvSS0U9","executionInfo":{"status":"ok","timestamp":1696332473740,"user_tz":-330,"elapsed":818,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"b15bada6-3a32-4241-9ca2-b1a0a444156a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[99, 99],\n","       [99, 99]])"]},"metadata":{},"execution_count":101}]},{"cell_type":"code","source":["import numpy as np\n","\n","# Create a 2D NumPy array\n","data_2d = np.array([[1, 2, 3],\n","                    [4, 5, 6],\n","                    [7, 8, 9]])\n","\n","# Calculate mean, median, and standard deviation along axis 0 (rows)\n","mean_values_rows = np.mean(data_2d, axis=0)\n","median_values_rows = np.median(data_2d, axis=0)\n","std_deviation_rows = np.std(data_2d, axis=0)\n","\n","# Calculate mean, median, and standard deviation along axis 1 (columns)\n","mean_values_columns = np.mean(data_2d, axis=1)\n","median_values_columns = np.median(data_2d, axis=1)\n","std_deviation_columns = np.std(data_2d, axis=1)\n","\n","# Print the results\n","print(\"Mean, Median, and Standard Deviation along rows:\")\n","print(f\"Mean: {mean_values_rows}, Median: {median_values_rows}, Standard Deviation: {std_deviation_rows}\")\n","\n","print(\"\\nMean, Median, and Standard Deviation along columns:\")\n","print(f\"Mean: {mean_values_columns}, Median: {median_values_columns}, Standard Deviation: {std_deviation_columns}\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CZPjFhuH3AqN","executionInfo":{"status":"ok","timestamp":1705386306325,"user_tz":-330,"elapsed":383,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"c86d0ac8-cea2-4eb1-8f8c-ed416b9aaf6c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mean, Median, and Standard Deviation along rows:\n","Mean: [4. 5. 6.], Median: [4. 5. 6.], Standard Deviation: [2.44948974 2.44948974 2.44948974]\n","\n","Mean, Median, and Standard Deviation along columns:\n","Mean: [2. 5. 8.], Median: [2. 5. 8.], Standard Deviation: [0.81649658 0.81649658 0.81649658]\n"]}]},{"cell_type":"code","source":["import numpy as np\n","\n","# Create a 2D NumPy array\n","matrix = np.array([[1, 2, 3],\n","                   [4, 5, 6],\n","                   [7, 8, 9]])\n","\n","# Use slicing to extract diagonal elements\n","diagonal_elements = matrix.diagonal()\n","\n","# Print the diagonal elements\n","print(diagonal_elements)\n"],"metadata":{"id":"z4C6QRjO3BVb","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708406049803,"user_tz":-330,"elapsed":414,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"f2ee54f2-2d60-42cd-ef28-33a6241c7911"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["[1 5 9]\n"]}]},{"cell_type":"code","source":["import numpy as np\n","\n","# Create a NumPy array\n","my_array = np.arange(10)\n","\n","# Slice and print the subarray\n","subarray = my_array[2:6]\n","print(subarray)\n"],"metadata":{"id":"fmfLwODt3KBs","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708406059392,"user_tz":-330,"elapsed":399,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"6b17a5dc-d700-4ad0-c260-8e18f60c4b2f"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["[2 3 4 5]\n"]}]},{"cell_type":"code","source":["# Given the following NumPy array: data = np.array([1, 2, 3, 4, 5]),\n","# use slicing to replace the values from index 2 to the end with the values [10, 20].\n","\n","import numpy as np\n","\n","# Given NumPy array\n","data = np.array([1, 2, 3, 4,5,7,9])\n","\n","# Use slicing to replace values\n","data[2:] = [10, 20,50,23,56]\n","\n","# Print the modified array\n","print(data)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WfWm_qD03alt","executionInfo":{"status":"ok","timestamp":1708407640141,"user_tz":-330,"elapsed":418,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"f0b19bf5-1fa1-4ba1-b330-28c2a500e4b1"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["[ 1  2 10 20 50 23 56]\n"]}]},{"cell_type":"code","source":["\n","# importing numpy module\n","import numpy as np\n","\n","# create an array with 5 rows and\n","# 4 columns\n","a = np.array([[21, 7, 8, 9], [34, 10, 11, 12],\n","              [1, 3, 14, 15], [1, 6, 17, 18],\n","              [4, 5, 6, 7]])\n","\n","# delete last three rows\n","# using numpy.delete\n","a = np.delete(a, [2, 3], 1)\n","print(a)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0hM5JPNm5ZLk","executionInfo":{"status":"ok","timestamp":1705385526428,"user_tz":-330,"elapsed":389,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"cabec3bb-6b52-4cfc-a7ba-4d4526e3e350"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[21  7]\n"," [34 10]\n"," [ 1  3]\n"," [ 1  6]\n"," [ 4  5]]\n"]}]},{"cell_type":"code","source":["    matrix = np.array([[11, 22, 33],\n","                       [44, 55, 66],\n","                       [77, 88, 99],\n","                       [110, 121, 132]])\n","\n","\n","     print(matrix.reshape(2, 6))\n","\n","    print(matrix.reshape(3, 4))\n","\n","    print(matrix.reshape(6, 2))"],"metadata":{"id":"nd1D259KCRwb"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import numpy as np\n","arr = np.array([1, 2, 3, 4, 5, 6])\n","newarr = np.array_split(arr, 3)\n","print(newarr)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uPO1hFU4Wbei","executionInfo":{"status":"ok","timestamp":1708413015607,"user_tz":-330,"elapsed":617,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"73ce2e24-ef22-4255-a8ef-10d0df6c821d"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["[array([1, 2]), array([3, 4]), array([5, 6])]\n"]}]},{"cell_type":"code","source":["newarr = np.array_split(arr, 4)\n","print(newarr)\n","# Code Explanation:The return value is an array containing three arrays.\n","# If the array has less elements than required, it will adjust from the end accordingly."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NbjfzoqvWgU-","executionInfo":{"status":"ok","timestamp":1708413032425,"user_tz":-330,"elapsed":7,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"aa8c8ae2-e05b-4455-a6f4-28d9de5095e5"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["[array([1, 2]), array([3, 4]), array([5]), array([6])]\n"]}]},{"cell_type":"markdown","source":["Use of numpy.where() in Python\n","\n","The NumPy module provides a function numpy.where() for selecting elements based on a condition. It returns elements chosen from a or b depending on the condition.\n","\n","For example, if all arguments -> condition, a & b are passed in numpy.where() then it will return elements selected from a & b depending on values in bool array yielded by the condition.\n","\n","If only the condition is provided, this function is a shorthand to the function np.asarray (condition).nonzero(). Although nonzero should be preferred directly, as it behaves correctly for subclasses.\n","\n","Syntax:\n","\n","numpy.where(condition[, x, y])"],"metadata":{"id":"MWAc6OQWaDyj"}},{"cell_type":"code","source":["a=np.arange(12)\n","b=np.where(a<6,a,5)\n","b"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4B0oQb58aC0m","executionInfo":{"status":"ok","timestamp":1708414047468,"user_tz":-330,"elapsed":466,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"f0f5e4ef-ca28-4492-c66e-3d5bdff0da8c"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 1, 2, 3, 4, 5, 5, 5, 5, 5, 5, 5])"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["x=np.array([[0,1,2],[0,2,5],[0,4,8]])\n","y = np.where(x<4,x,-2)\n","x"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gqkXspexaTTi","executionInfo":{"status":"ok","timestamp":1708414121812,"user_tz":-330,"elapsed":403,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"9202558b-5b2f-464a-bf98-d42c4166e5f8"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0, 1, 2],\n","       [0, 2, 5],\n","       [0, 4, 8]])"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cj3CzlPfarIE","executionInfo":{"status":"ok","timestamp":1708414129104,"user_tz":-330,"elapsed":445,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"ab5b7545-98cb-45ab-c3c0-92b8f70e0b71"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 0,  1,  2],\n","       [ 0,  2, -2],\n","       [ 0, -2, -2]])"]},"metadata":{},"execution_count":15}]},{"cell_type":"markdown","source":["Numpy.transpose() in Python\n","\n","The numpy.transpose() function is one of the most important functions in matrix multiplication. This function permutes or reserves the dimension of the given array and returns the modified array.\n","\n","The numpy.transpose() function changes the row elements into column elements and the column elements into row elements. The output of this function is a modified array of the original one.\n","\n","Syntax\n","\n","numpy.transpose(arr, axis=None)"],"metadata":{"id":"KX0z0kIjbAeX"}},{"cell_type":"code","source":["a = np.arange(6).reshape((2,3))"],"metadata":{"id":"9wQj3l5fas5V","executionInfo":{"status":"ok","timestamp":1708414267737,"user_tz":-330,"elapsed":431,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["a"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tCB1WazCbE_R","executionInfo":{"status":"ok","timestamp":1708414268385,"user_tz":-330,"elapsed":5,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"8bdb72bd-8082-4f57-ca4a-1ddfd5dcb02f"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0, 1, 2],\n","       [3, 4, 5]])"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["b=np.transpose(a)\n","b"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"P9y8etssbJpL","executionInfo":{"status":"ok","timestamp":1708414270686,"user_tz":-330,"elapsed":501,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"2534cbd6-3dd6-4641-e24d-ba09c322c349"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0, 3],\n","       [1, 4],\n","       [2, 5]])"]},"metadata":{},"execution_count":21}]},{"cell_type":"markdown","source":["How to use Numpy.clip() in Python\n","\n","For clipping the values in an array, the numpy module of Python provides a function called numpy.clip(). In the clip() function, we will pass the interval, and the values which are outside the interval will be clipped for the interval edges.\n","\n","If we specify an interval of [1, 2] then the values smaller than 1 become 1 and larger than 2 is 2. This function is similar to numpy.maximum(x_min, numpy.maximum(x, x_max)). But it is faster than np.maximum(). In numpy.clip(), there is no need to perform check for ensuring x_min < x_max.\n","\n","Syntax:\n","\n","numpy.clip(a, a_min, a_max, out=None)"],"metadata":{"id":"SspDxMtwbzzM"}},{"cell_type":"code","source":["x =np.arange(12)\n","y=np.clip(x,3,10)\n","y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"V18RuY1hbNLF","executionInfo":{"status":"ok","timestamp":1708414468416,"user_tz":-330,"elapsed":452,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"e3ad223f-f9b2-442c-972b-3565c18d2c57"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 3,  3,  3,  3,  4,  5,  6,  7,  8,  9, 10, 10])"]},"metadata":{},"execution_count":22}]},{"cell_type":"markdown","source":["# CLIP()\n"],"metadata":{"id":"9P8ffv8GnVnQ"}},{"cell_type":"code","source":["a=np.arange(12)\n","out_array = np.zeros_like(a)\n","print(out_array)\n","np.clip(a,3,9,out=out_array)\n","out_array"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UO1BYdqYb_w0","executionInfo":{"status":"ok","timestamp":1708414987704,"user_tz":-330,"elapsed":385,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"52d9e2fc-ce7e-48f0-9c30-a75be258851b"},"execution_count":26,"outputs":[{"output_type":"stream","name":"stdout","text":["[0 0 0 0 0 0 0 0 0 0 0 0]\n"]},{"output_type":"execute_result","data":{"text/plain":["array([3, 3, 3, 3, 4, 5, 6, 7, 8, 9, 9, 9])"]},"metadata":{},"execution_count":26}]},{"cell_type":"markdown","source":["What is Numpy ceil() method\n","\n","This function returns the ceil value of the input array elements.\n","The floor of a number x is i if i is the smallest integer such that, i>=x."],"metadata":{"id":"CFqyvVTdpJxV"}},{"cell_type":"markdown","source":["Lets discuss about Numpy floor()\n","\n","This function returns the floor value of the input array elements. The floor of a number x is i if i is the largest integer such that, i<=x.\n","\n","Syntax\n","\n","numpy.floor(array)\n","Parameters\n","\n","array: Array elements whose floor values are to be calculated.\n","Return\n","\n","An array containing the floor values is returned.\n","\n","\n"],"metadata":{"id":"rv4hfWZQpTOt"}},{"cell_type":"markdown","source":["What is Numpy trunc()\n","\n","This function returns the truncated value of the input array elements. The truncated value t of input value x is the nearest integer which is closer to zero than x.\n","\n","The fractional part of the input number is discarded by this function.\n","\n","Syntax\n","\n","numpy.trunc(array)"],"metadata":{"id":"pMwoSjLfpm6x"}},{"cell_type":"code","source":["arr =np.arange(10,100,5,int)\n","arr"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DBtzCAMQcK5y","executionInfo":{"status":"ok","timestamp":1708418152181,"user_tz":-330,"elapsed":407,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"bec2ac78-7e5a-4f4e-d454-93aea28919b8"},"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([10., 15., 20., 25., 30., 35., 40., 45., 50., 55., 60., 65., 70.,\n","       75., 80., 85., 90., 95.])"]},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["np.arange(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XMglqClWp6Hl","executionInfo":{"status":"ok","timestamp":1708418132813,"user_tz":-330,"elapsed":568,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"76c51e06-5198-45bc-ca4f-3d83561870a8"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["np.arange(10,15)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lAmwUHIgp-as","executionInfo":{"status":"ok","timestamp":1708418142883,"user_tz":-330,"elapsed":409,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"6d4e603a-3b26-47d7-c31a-af56d2710f09"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([10, 11, 12, 13, 14])"]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["a = np.array([[1, 2], [3, 4]])\n","print(a)\n","print(np.prod(a))\n","\n","print(np.prod(a, axis = 0))\n","\n","print(np.prod(a, axis = 1))\n","print(np.sum(a, axis = 1))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"K2W1UPL7qA6i","executionInfo":{"status":"ok","timestamp":1708418642200,"user_tz":-330,"elapsed":631,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"78478cb1-631f-4bbf-b707-983d6ab3c396"},"execution_count":34,"outputs":[{"output_type":"stream","name":"stdout","text":["[[1 2]\n"," [3 4]]\n","24\n","[3 8]\n","[ 2 12]\n","[3 7]\n"]}]},{"cell_type":"code","source":["rand_floats = np.random.rand(5)\n","print(rand_floats)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-W1VhGmCrrzS","executionInfo":{"status":"ok","timestamp":1708424741156,"user_tz":-330,"elapsed":415,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"1baacc39-5ee6-4188-8053-add4c6c0f9d9"},"execution_count":47,"outputs":[{"output_type":"stream","name":"stdout","text":["[0.38048793 0.44962866 0.79106023 0.74603138 0.30175422]\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"LTRLDv_4A5FV"},"execution_count":null,"outputs":[]}]}