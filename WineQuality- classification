{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPd2tj9E0JiTMHkyxtXnMSM"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["# CLASSIFICATION"],"metadata":{"id":"iy_CZNcGwrBN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df = pd.read_csv('/content/winequality-red.csv')\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":261},"id":"CLnG-qJ5xe1y","executionInfo":{"status":"ok","timestamp":1705568036544,"user_tz":-330,"elapsed":855,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"b6bc3111-3535-4d1f-e4e2-97d98e4a7478"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   fixed acidity  volatile acidity  citric acid  residual sugar  chlorides  \\\n","0            7.4              0.70         0.00             1.9      0.076   \n","1            7.8              0.88         0.00             2.6      0.098   \n","2            7.8              0.76         0.04             2.3      0.092   \n","3           11.2              0.28         0.56             1.9      0.075   \n","4            7.4              0.70         0.00             1.9      0.076   \n","\n","   free sulfur dioxide  total sulfur dioxide  density    pH  sulphates  \\\n","0                 11.0                  34.0   0.9978  3.51       0.56   \n","1                 25.0                  67.0   0.9968  3.20       0.68   \n","2                 15.0                  54.0   0.9970  3.26       0.65   \n","3                 17.0                  60.0   0.9980  3.16       0.58   \n","4                 11.0                  34.0   0.9978  3.51       0.56   \n","\n","   alcohol  quality  \n","0      9.4        5  \n","1      9.8        5  \n","2      9.8        5  \n","3      9.8        6  \n","4      9.4        5  "],"text/html":["\n","  <div id=\"df-ead5e908-e9f9-433a-9cc9-f3442e76c97c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>fixed acidity</th>\n","      <th>volatile acidity</th>\n","      <th>citric acid</th>\n","      <th>residual sugar</th>\n","      <th>chlorides</th>\n","      <th>free sulfur dioxide</th>\n","      <th>total sulfur dioxide</th>\n","      <th>density</th>\n","      <th>pH</th>\n","      <th>sulphates</th>\n","      <th>alcohol</th>\n","      <th>quality</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>7.4</td>\n","      <td>0.70</td>\n","      <td>0.00</td>\n","      <td>1.9</td>\n","      <td>0.076</td>\n","      <td>11.0</td>\n","      <td>34.0</td>\n","      <td>0.9978</td>\n","      <td>3.51</td>\n","      <td>0.56</td>\n","      <td>9.4</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>7.8</td>\n","      <td>0.88</td>\n","      <td>0.00</td>\n","      <td>2.6</td>\n","      <td>0.098</td>\n","      <td>25.0</td>\n","      <td>67.0</td>\n","      <td>0.9968</td>\n","      <td>3.20</td>\n","      <td>0.68</td>\n","      <td>9.8</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>7.8</td>\n","      <td>0.76</td>\n","      <td>0.04</td>\n","      <td>2.3</td>\n","      <td>0.092</td>\n","      <td>15.0</td>\n","      <td>54.0</td>\n","      <td>0.9970</td>\n","      <td>3.26</td>\n","      <td>0.65</td>\n","      <td>9.8</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>11.2</td>\n","      <td>0.28</td>\n","      <td>0.56</td>\n","      <td>1.9</td>\n","      <td>0.075</td>\n","      <td>17.0</td>\n","      <td>60.0</td>\n","      <td>0.9980</td>\n","      <td>3.16</td>\n","      <td>0.58</td>\n","      <td>9.8</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>7.4</td>\n","      <td>0.70</td>\n","      <td>0.00</td>\n","      <td>1.9</td>\n","      <td>0.076</td>\n","      <td>11.0</td>\n","      <td>34.0</td>\n","      <td>0.9978</td>\n","      <td>3.51</td>\n","      <td>0.56</td>\n","      <td>9.4</td>\n","      <td>5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ead5e908-e9f9-433a-9cc9-f3442e76c97c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ead5e908-e9f9-433a-9cc9-f3442e76c97c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ead5e908-e9f9-433a-9cc9-f3442e76c97c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-de6b1784-69b2-4e17-ae0c-50dcb28c01f3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-de6b1784-69b2-4e17-ae0c-50dcb28c01f3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-de6b1784-69b2-4e17-ae0c-50dcb28c01f3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["df['quality'].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nKzc-8T-xod5","executionInfo":{"status":"ok","timestamp":1705568064086,"user_tz":-330,"elapsed":378,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"6a8e0baa-d450-4559-a8ec-83c70661841d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([5, 6, 7, 4, 8, 3])"]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3Fwpjv9ux06c","executionInfo":{"status":"ok","timestamp":1705568163718,"user_tz":-330,"elapsed":360,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"7bd45a71-c318-4abd-e06b-dc57ef02a54f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1599 entries, 0 to 1598\n","Data columns (total 12 columns):\n"," #   Column                Non-Null Count  Dtype  \n","---  ------                --------------  -----  \n"," 0   fixed acidity         1599 non-null   float64\n"," 1   volatile acidity      1599 non-null   float64\n"," 2   citric acid           1599 non-null   float64\n"," 3   residual sugar        1599 non-null   float64\n"," 4   chlorides             1599 non-null   float64\n"," 5   free sulfur dioxide   1599 non-null   float64\n"," 6   total sulfur dioxide  1599 non-null   float64\n"," 7   density               1599 non-null   float64\n"," 8   pH                    1599 non-null   float64\n"," 9   sulphates             1599 non-null   float64\n"," 10  alcohol               1599 non-null   float64\n"," 11  quality               1599 non-null   int64  \n","dtypes: float64(11), int64(1)\n","memory usage: 150.0 KB\n"]}]},{"cell_type":"code","source":["y=df['quality']\n","x=df.drop(['quality'],axis=1)"],"metadata":{"id":"uTkcdBI7y5eY"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mUKtLYpizFr2","executionInfo":{"status":"ok","timestamp":1705568401300,"user_tz":-330,"elapsed":378,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"35544098-ca0b-4f9e-8e1a-bd012f806ac1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1599, 11)"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["from sklearn.preprocessing import StandardScaler\n","scaler = StandardScaler()\n","x = scaler.fit_transform(x)"],"metadata":{"id":"nygKCwT52O7w"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.30,random_state=7)"],"metadata":{"id":"TWv_BvWryNPo"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x_train.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-y1t8N-QzeFw","executionInfo":{"status":"ok","timestamp":1705568506520,"user_tz":-330,"elapsed":595,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"9f40c876-6e70-4d72-dfa1-332270ac184a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1119, 11)"]},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["x_test.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ksPeFrNnzgxU","executionInfo":{"status":"ok","timestamp":1705568521643,"user_tz":-330,"elapsed":347,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"a12cbd8f-302a-44d1-8a31-74d106c67138"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(480, 11)"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["y_train.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-6bOTMMHzicO","executionInfo":{"status":"ok","timestamp":1705568534396,"user_tz":-330,"elapsed":11,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"4ec86f36-89af-4883-d139-18f3719e7cce"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1119,)"]},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["y_test.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HrYL9Cuhznvo","executionInfo":{"status":"ok","timestamp":1705569124797,"user_tz":-330,"elapsed":563,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"c98374b3-24d3-4bbb-ec1b-3c67becb5fa5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(480,)"]},"metadata":{},"execution_count":43}]},{"cell_type":"code","source":[],"metadata":{"id":"AuLMqlIY14Fh"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Logistic regression\n","\n","from sklearn.linear_model import LogisticRegression\n","model_log =LogisticRegression(max_iter=1000)\n","model_log.fit(x_train,y_train)\n","prediction_log = model_log.predict(x_test)"],"metadata":{"id":"OSZmEshdzqX1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["prediction_log"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KKYER9R41GPV","executionInfo":{"status":"ok","timestamp":1705569196296,"user_tz":-330,"elapsed":416,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"5c8a0562-bbd7-4460-8206-1bf74421604b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([5, 6, 6, 5, 6, 6, 6, 7, 5, 5, 6, 7, 8, 5, 5, 5, 6, 5, 6, 6, 6, 5,\n","       5, 6, 5, 6, 5, 5, 6, 5, 6, 5, 6, 5, 5, 5, 6, 5, 6, 5, 5, 6, 6, 6,\n","       4, 6, 5, 6, 6, 7, 6, 5, 7, 7, 6, 6, 6, 6, 5, 7, 5, 6, 6, 5, 5, 5,\n","       6, 6, 6, 6, 7, 6, 6, 6, 5, 6, 6, 6, 5, 6, 6, 6, 5, 5, 5, 6, 5, 3,\n","       6, 5, 6, 5, 5, 5, 6, 6, 7, 5, 7, 6, 5, 6, 5, 5, 5, 6, 6, 6, 6, 5,\n","       6, 5, 6, 6, 5, 5, 5, 6, 5, 5, 5, 5, 6, 6, 6, 5, 5, 7, 8, 6, 7, 5,\n","       6, 5, 7, 6, 6, 5, 5, 5, 5, 5, 6, 5, 5, 6, 6, 5, 5, 6, 5, 5, 5, 6,\n","       5, 5, 5, 5, 5, 6, 5, 6, 7, 6, 5, 5, 5, 5, 6, 5, 5, 5, 5, 6, 6, 6,\n","       6, 5, 6, 5, 6, 6, 6, 5, 5, 6, 6, 5, 6, 8, 6, 7, 5, 6, 5, 5, 5, 6,\n","       7, 6, 5, 6, 5, 6, 6, 7, 6, 6, 7, 6, 6, 4, 6, 5, 6, 5, 5, 6, 5, 6,\n","       6, 5, 5, 6, 6, 7, 5, 6, 5, 6, 5, 5, 6, 6, 6, 5, 5, 7, 5, 5, 5, 5,\n","       5, 5, 6, 5, 6, 5, 6, 6, 6, 5, 6, 6, 7, 6, 5, 6, 6, 5, 6, 5, 7, 6,\n","       5, 5, 5, 6, 5, 6, 7, 5, 7, 6, 6, 5, 6, 5, 6, 7, 8, 6, 4, 6, 7, 6,\n","       7, 5, 7, 6, 5, 6, 6, 6, 5, 6, 5, 5, 5, 7, 5, 6, 6, 5, 6, 6, 5, 6,\n","       5, 5, 5, 7, 6, 7, 6, 6, 6, 5, 5, 7, 6, 5, 5, 5, 6, 6, 5, 6, 6, 6,\n","       6, 6, 5, 6, 6, 6, 5, 5, 5, 6, 4, 6, 6, 5, 5, 6, 6, 5, 6, 6, 6, 6,\n","       5, 6, 5, 6, 5, 5, 6, 6, 5, 6, 5, 6, 6, 5, 5, 5, 6, 6, 6, 5, 5, 5,\n","       6, 6, 6, 5, 7, 7, 5, 5, 5, 7, 4, 6, 6, 5, 5, 6, 6, 5, 5, 5, 5, 5,\n","       6, 6, 6, 5, 5, 5, 6, 6, 6, 5, 5, 6, 5, 5, 6, 5, 6, 5, 6, 6, 5, 5,\n","       5, 5, 6, 5, 6, 5, 5, 6, 5, 7, 5, 5, 5, 6, 6, 5, 6, 6, 6, 6, 5, 6,\n","       6, 6, 6, 7, 5, 5, 5, 6, 5, 7, 6, 5, 6, 6, 6, 6, 6, 7, 6, 5, 7, 6,\n","       5, 6, 5, 6, 6, 6, 6, 6, 5, 5, 6, 5, 6, 5, 5, 7, 5, 6])"]},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["y_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ic58E7xI2JIE","executionInfo":{"status":"ok","timestamp":1705569457694,"user_tz":-330,"elapsed":382,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"3aaf43f4-5b73-4604-e0d5-925969f34803"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1526    6\n","674     6\n","1508    6\n","58      5\n","1351    6\n","       ..\n","125     5\n","540     5\n","1162    7\n","1203    5\n","813     4\n","Name: quality, Length: 480, dtype: int64"]},"metadata":{},"execution_count":50}]},{"cell_type":"code","source":["from sklearn.metrics import accuracy_score,confusion_matrix\n","print(\"Accuracy Score:\",accuracy_score(y_test,prediction_log))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vlRsciwx3B4O","executionInfo":{"status":"ok","timestamp":1705569758570,"user_tz":-330,"elapsed":15,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"f8fcfb3c-a1a3-428a-b458-ab0e5bc1ded7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy Score: 0.5770833333333333\n"]}]},{"cell_type":"code","source":["cm =confusion_matrix(y_test,prediction_log)\n","cm"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5aieaiig4WZ3","executionInfo":{"status":"ok","timestamp":1705569799760,"user_tz":-330,"elapsed":4,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"4f42ac49-4535-4a80-ac52-6ee709deffc3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[  0,   0,   1,   0,   0,   0],\n","       [  0,   1,  15,   5,   1,   0],\n","       [  1,   3, 129,  55,   1,   0],\n","       [  0,   1,  62, 124,  14,   4],\n","       [  0,   0,   1,  34,  23,   0],\n","       [  0,   0,   0,   4,   1,   0]])"]},"metadata":{},"execution_count":52}]},{"cell_type":"code","source":["confusion_matrix(y_test==5,prediction_log==5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"n27v5U9G4ctv","executionInfo":{"status":"ok","timestamp":1705570935607,"user_tz":-330,"elapsed":438,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"6f2ee4f5-2d06-4231-a18a-b74afdca4d6c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[212,  79],\n","       [ 60, 129]])"]},"metadata":{},"execution_count":53}]},{"cell_type":"code","source":["#Decision Tree\n","\n","from sklearn.tree import DecisionTreeClassifier\n","model_tree = DecisionTreeClassifier(criterion='entropy',random_state=7)\n","model_tree.fit(x_train,y_train)\n","prediction_tree =model_tree.predict(x_test)\n","\n","print(\"Accuracy Score:\",accuracy_score(y_test,prediction_tree))\n","confusion_matrix(y_test==5,prediction_tree==5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cbwl2qy08x6P","executionInfo":{"status":"ok","timestamp":1705571408635,"user_tz":-330,"elapsed":373,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"2727109c-46a3-4f86-959b-a347fc03b57c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy Score: 0.5958333333333333\n"]},{"output_type":"execute_result","data":{"text/plain":["array([[227,  64],\n","       [ 57, 132]])"]},"metadata":{},"execution_count":55}]},{"cell_type":"code","source":["#SVM\n","\n","from sklearn.svm import SVC\n","model_svc = SVC()\n","model_svc.fit(x_train,y_train)\n","prediction_svc = model_svc.predict(x_test)\n","\n","\n","print(\"Accuracy Score:\",accuracy_score(y_test,prediction_svc))\n","confusion_matrix(y_test==5,prediction_svc==5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6i2k8GmU-GE6","executionInfo":{"status":"ok","timestamp":1705571707914,"user_tz":-330,"elapsed":549,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"60ee33e3-93ca-4e78-b8ee-dc3be5567510"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy Score: 0.6104166666666667\n"]},{"output_type":"execute_result","data":{"text/plain":["array([[214,  77],\n","       [ 50, 139]])"]},"metadata":{},"execution_count":56}]},{"cell_type":"code","source":["from sklearn.neighbors import KNeighborsClassifier\n","model_knn = KNeighborsClassifier(n_neighbors=8)\n","model_knn.fit(x_train,y_train)\n","predictions_knn = model_knn.predict(x_test)\n","\n","print(\"Accuracy Score:\",accuracy_score(y_test,predictions_knn))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9LskNZ1Q_udz","executionInfo":{"status":"ok","timestamp":1705572474770,"user_tz":-330,"elapsed":369,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"ab892175-71b9-47d5-c918-3c48191c46a2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy Score: 0.6\n"]}]},{"cell_type":"code","source":["import numpy as np\n","import matplotlib.pyplot as plt\n","acc_scores = []\n","neighbors = np.arange(3,15)\n","#creating a loop for each KNN values\n","for k in neighbors:\n","    classifier = KNeighborsClassifier(n_neighbors=k,metric='minkowski')\n","    classifier.fit(x_train,y_train)\n","    y_pred = classifier.predict(x_test)\n","    acc = accuracy_score(y_test,y_pred)\n","    acc_scores.append(acc)\n","\n","#checking for which k value we got highest accuracy\n","plt.plot(neighbors,acc_scores,'o-')\n","plt.xlabel('k value')\n","plt.ylabel('accuracy')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":449},"id":"bHQxZu70F2uj","executionInfo":{"status":"ok","timestamp":1705573463805,"user_tz":-330,"elapsed":2582,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"964f19e9-999a-4301-d908-1adb7ec290a2"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.ensemble import RandomForestClassifier\n","model_RF = RandomForestClassifier(random_state=1)\n","model_RF.fit(x_train,y_train)\n","prediction_RF =model_RF.predict(x_test)\n","\n","print(\"Accuracy Score:\",accuracy_score(y_test,prediction_RF))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zyCJgP-aCdUi","executionInfo":{"status":"ok","timestamp":1705572711038,"user_tz":-330,"elapsed":918,"user":{"displayName":"Anitha B","userId":"02904034146350906953"}},"outputId":"823cf1d0-92aa-4ea5-966b-f4bcfde92ab8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy Score: 0.6729166666666667\n"]}]}]}